# Day One
Figure out what changes there have been since I last developed modules (0.7.x).
- Hooks still seems very much the same, perhaps their parameters have slightly changed?
- Other things to research: 
    - Attaching custom data to a token/actor/thing in general
    - using hooks might be dangerous when multiple users update the same bar
        -> can we use some kind of locking mechanism or optimistic locking?

- Why did I need such complex key logic before?
  When storing on the user, it needs to be stored under the key for the actor/token
  On the actor/token, it can be just direct or under its own ido
  
  
Scenarios:
- User updates hotbar when

  Token is selected by only them
    -> update token hotbar
    -> update ui hotbar (done by Foundry, we do nothing)

  Token is selected by them and other players
    -> update token hotbar
    -> update ui hotbar (done by Foundry, we do nothing)
    -> update ui hotbar other players (correct page, no need to switch pages if not active)

  No token is selected
    -> Player's 'no controlled token hotbar' is updated

  No token is selected, but hotbar is shared
    -> Player's 'no controlled token hotbar' is updated
    -> Other player's hotbar is updated, if they do not have a token selected.

  Nice to have:
    - Page can be set by players individually

Requirements:
- Code must be readable for the average foundry developer
    -> Everything must be in plain javascript
    -> Decisions must be documented (why do we store flags in specific documents, why do we use specific hooks, etc.)
    -> Concepts must be documented
    -> Features/requirements must be documented with examples
    -> All logic must be unit tested

